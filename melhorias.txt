Melhorias:
	-Fazer o teste passar e escrever testes reais
	-Utilize a modularização do angular (Criou configurações module mas não tá usando)

	- form-add-transaction.component.ts
    usar this.getData() menos vezes (de preferencia nenhum);

Desafios:
	-Criptografar dados no storage
	-Permitir edição de transações
	-Ordenar por inserção, alfabeticamente ou por valor (todos podendo fazer normal e de trás pra frente tbm)
	-Troca os spans vazios do menu por pseudo elementos
	-Criar um serviço para cuidar das transações
    por observable ao invés de input/output entre componentes

================================

Feitos

-Dinheiro sempre tem que mostrar duas casas decimais --- ok
-Não pode permitir inserção sem valor --- ok
-Limitar o valor a ser inserido (vide imagem) --- ok
-Corrigir tipagens no serviço de storage --- ok
-table-transaction.component.ts --> trocar forEach por reduce; --- ok

-table-transaction.component.ts
  valueTotal - atribuição de variável desnecessária (transactionLength); --- ok
  remover index do forEach; --- ok
  revisar linha 63 (WTF hahaha); --- ok
  revisar ngOnChanges --- ok

- form-add-transaction.component.ts
  transactions VS transaction (confuso, usar apenas uma); --- ok
    trocar inicialização do options para poder aceitar mais opções caso o enum seja alterado (loop do enum); --- ok

Olhar

-Revisar máscara: --- olhar lib ngx-currency
    eu consegui inserir 0,1 ao digitar zero,
    selecionar tudo e digitar 1, aí ele perde uma casa decimal